package com.example.webservice.fund;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.4.2
 * 2021-03-04T14:52:00.862+08:00
 * Generated source version: 3.4.2
 *
 */
@WebServiceClient(name = "FundInfoService",
                  wsdlLocation = "classpath:wsdl/FundInfoService.xml",
                  targetNamespace = "http://tempuri.org/")
public class FundInfoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "FundInfoService");
    public final static QName FundInfoServiceSoap = new QName("http://tempuri.org/", "FundInfoServiceSoap");
    public final static QName FundInfoServiceSoap12 = new QName("http://tempuri.org/", "FundInfoServiceSoap12");
    public final static QName FundInfoServiceHttpPost = new QName("http://tempuri.org/", "FundInfoServiceHttpPost");
    public final static QName FundInfoServiceHttpGet = new QName("http://tempuri.org/", "FundInfoServiceHttpGet");
    static {
        URL url = FundInfoService.class.getClassLoader().getResource("wsdl/FundInfoService.xml");
        if (url == null) {
            java.util.logging.Logger.getLogger(FundInfoService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/FundInfoService.xml");
        }
        WSDL_LOCATION = url;
    }

    public FundInfoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FundInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FundInfoService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public FundInfoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public FundInfoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public FundInfoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns FundInfoServiceSoap
     */
    @WebEndpoint(name = "FundInfoServiceSoap")
    public FundInfoServiceSoap getFundInfoServiceSoap() {
        return super.getPort(FundInfoServiceSoap, FundInfoServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FundInfoServiceSoap
     */
    @WebEndpoint(name = "FundInfoServiceSoap")
    public FundInfoServiceSoap getFundInfoServiceSoap(WebServiceFeature... features) {
        return super.getPort(FundInfoServiceSoap, FundInfoServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns FundInfoServiceSoap
     */
    @WebEndpoint(name = "FundInfoServiceSoap12")
    public FundInfoServiceSoap getFundInfoServiceSoap12() {
        return super.getPort(FundInfoServiceSoap12, FundInfoServiceSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FundInfoServiceSoap
     */
    @WebEndpoint(name = "FundInfoServiceSoap12")
    public FundInfoServiceSoap getFundInfoServiceSoap12(WebServiceFeature... features) {
        return super.getPort(FundInfoServiceSoap12, FundInfoServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns FundInfoServiceHttpPost
     */
    @WebEndpoint(name = "FundInfoServiceHttpPost")
    public FundInfoServiceHttpPost getFundInfoServiceHttpPost() {
        return super.getPort(FundInfoServiceHttpPost, FundInfoServiceHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FundInfoServiceHttpPost
     */
    @WebEndpoint(name = "FundInfoServiceHttpPost")
    public FundInfoServiceHttpPost getFundInfoServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(FundInfoServiceHttpPost, FundInfoServiceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns FundInfoServiceHttpGet
     */
    @WebEndpoint(name = "FundInfoServiceHttpGet")
    public FundInfoServiceHttpGet getFundInfoServiceHttpGet() {
        return super.getPort(FundInfoServiceHttpGet, FundInfoServiceHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FundInfoServiceHttpGet
     */
    @WebEndpoint(name = "FundInfoServiceHttpGet")
    public FundInfoServiceHttpGet getFundInfoServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(FundInfoServiceHttpGet, FundInfoServiceHttpGet.class, features);
    }

}
