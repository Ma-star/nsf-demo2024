package com.example.webservice.risk;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.4.2
 * 2021-03-04T14:51:34.486+08:00
 * Generated source version: 3.4.2
 *
 */
@WebServiceClient(name = "CustomerRiskInfo",
                  wsdlLocation = "classpath:wsdl/CustomerRiskInfo.xml",
                  targetNamespace = "http://tempuri.org/")
public class CustomerRiskInfo extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "CustomerRiskInfo");
    public final static QName CustomerRiskInfoHttpPost = new QName("http://tempuri.org/", "CustomerRiskInfoHttpPost");
    public final static QName CustomerRiskInfoSoap12 = new QName("http://tempuri.org/", "CustomerRiskInfoSoap12");
    public final static QName CustomerRiskInfoSoap = new QName("http://tempuri.org/", "CustomerRiskInfoSoap");
    public final static QName CustomerRiskInfoHttpGet = new QName("http://tempuri.org/", "CustomerRiskInfoHttpGet");
    static {
        URL url = CustomerRiskInfo.class.getClassLoader().getResource("wsdl/CustomerRiskInfo.xml");
        if (url == null) {
            java.util.logging.Logger.getLogger(CustomerRiskInfo.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/CustomerRiskInfo.xml");
        }
        WSDL_LOCATION = url;
    }

    public CustomerRiskInfo(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CustomerRiskInfo(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CustomerRiskInfo() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CustomerRiskInfo(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CustomerRiskInfo(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CustomerRiskInfo(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CustomerRiskInfoHttpPost
     */
    @WebEndpoint(name = "CustomerRiskInfoHttpPost")
    public CustomerRiskInfoHttpPost getCustomerRiskInfoHttpPost() {
        return super.getPort(CustomerRiskInfoHttpPost, CustomerRiskInfoHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerRiskInfoHttpPost
     */
    @WebEndpoint(name = "CustomerRiskInfoHttpPost")
    public CustomerRiskInfoHttpPost getCustomerRiskInfoHttpPost(WebServiceFeature... features) {
        return super.getPort(CustomerRiskInfoHttpPost, CustomerRiskInfoHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns CustomerRiskInfoSoap
     */
    @WebEndpoint(name = "CustomerRiskInfoSoap12")
    public CustomerRiskInfoSoap getCustomerRiskInfoSoap12() {
        return super.getPort(CustomerRiskInfoSoap12, CustomerRiskInfoSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerRiskInfoSoap
     */
    @WebEndpoint(name = "CustomerRiskInfoSoap12")
    public CustomerRiskInfoSoap getCustomerRiskInfoSoap12(WebServiceFeature... features) {
        return super.getPort(CustomerRiskInfoSoap12, CustomerRiskInfoSoap.class, features);
    }


    /**
     *
     * @return
     *     returns CustomerRiskInfoSoap
     */
    @WebEndpoint(name = "CustomerRiskInfoSoap")
    public CustomerRiskInfoSoap getCustomerRiskInfoSoap() {
        return super.getPort(CustomerRiskInfoSoap, CustomerRiskInfoSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerRiskInfoSoap
     */
    @WebEndpoint(name = "CustomerRiskInfoSoap")
    public CustomerRiskInfoSoap getCustomerRiskInfoSoap(WebServiceFeature... features) {
        return super.getPort(CustomerRiskInfoSoap, CustomerRiskInfoSoap.class, features);
    }


    /**
     *
     * @return
     *     returns CustomerRiskInfoHttpGet
     */
    @WebEndpoint(name = "CustomerRiskInfoHttpGet")
    public CustomerRiskInfoHttpGet getCustomerRiskInfoHttpGet() {
        return super.getPort(CustomerRiskInfoHttpGet, CustomerRiskInfoHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerRiskInfoHttpGet
     */
    @WebEndpoint(name = "CustomerRiskInfoHttpGet")
    public CustomerRiskInfoHttpGet getCustomerRiskInfoHttpGet(WebServiceFeature... features) {
        return super.getPort(CustomerRiskInfoHttpGet, CustomerRiskInfoHttpGet.class, features);
    }

}
